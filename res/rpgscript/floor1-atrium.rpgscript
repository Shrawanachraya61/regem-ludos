#floor1Atrium
@this

#floor2South
@this

#floor1-atrium-desk-employee
  action,?once():this
  action,floor1-atrium-desk-employee2
@this
  +lookAtEachOther('Ada','Atrium Desk Employee');
  +setConversation('Ada');
  Atrium Desk Employee: "Hello and welcome to the Regem Ludos Arcade!"
  Atrium Desk Employee: "Have you been here before?"
  +setConversationSpeaker(none);
  +setAnimationAndWait('Ada', 'ada_shake_head_down');
  +lookAtEachOther('Ada','Atrium Desk Employee');
  +waitMS(500);
  Ada: "I have not."
  Atrium Desk Employee: "A newcomer?  Wonderful!  Please allow me to give you a brief rundown of our advanced arcade."
  Ada: "Go ahead."
  Atrium Desk Employee: "Excellent.  To start, we have a wide variety of arcade games for you to enjoy.  Each of these machines requires some number of Regem Ludos Tokens to play."
  Atrium Desk Employee: "Since you are new, I am happily able to provide you with a courtesy starter pack of 10 Tokens."
  +setConversationSpeaker(none);
  +setAnimationAndWait('Atrium Desk Employee', employee-girl_ovr_gesture_rightup);
  +modifyTokens(10);
  Atrium Desk Employee: "Use those to play any one of our many arcade games!"
  Ada: "Okay.  Straightforward enough.  What else?"
  Atrium Desk Employee: "The Regem Ludos Arcade is a very large facility and features several particularly SPECIAL floors.  These are the primary reason why people come to this arcade. These are the VR floors."
  Ada: "VR Floors?"
  +setConversationSpeaker(none);
  +setAnimationAndWait('Atrium Desk Employee', employee-girl_ovr_nod_rightup);
  Atrium Desk Employee: "Yes! On these special floors we are able to create a truly astounding variety of different places and things - all in virtual space!"
  Atrium Desk Employee: "However, to get access you'll need a wearable called a 'Haptic Bracer'."
  Ada: "Actually, I am only here to see a friend of mine.  He said he is on the second floor.  Can I not just go up there and meet him?"
  Atrium Desk Employee: "Oh, unfortunately to get access to the upper floors, you'll need to acquire a 'Haptic Bracer'."
  Atrium Desk Employee: "But don't worry, the Regem Ludos arcade provides all newcomers with one upon entry."
  Atrium Desk Employee: "Go and speak with Instructor Jason over in the area to the east of this room.  He is standing outside of a VR Practice area."
  Atrium Desk Employee: "He can teach you some helpful tips on how to battle some of the monsters in VR."
  +callScript('utils-character-shake-z', 'Ada');
  Ada: "Wait-- monsters?  I just need to go to the second floor!"
  +setConversationSpeaker(none);
  +setAnimationAndWait('Atrium Desk Employee', employee-girl_ovr_nod_rightup);
  Atrium Desk Employee: "Yep!  Our VR features an exciting battle system!  You'll have to fight your way through the floors of this arcade to reach the top!"
  Atrium Desk Employee: "That's about it for the rundown.  If you have further questions, don't hesitate to ask!"
  Ada: "But what about--?"
  Atrium Desk Employee: "Have a wonderful time here at the Regem Ludos Arcade!"
  +setConversationSpeaker(none);
  +waitMS(1000);
  Ada: "..."
  +setConversationSpeaker(none);
  +setFacing('Atrium Desk Employee', rightup);
  +walkToMarker('Ada', MarkerDeskEmployeeWalk);
  +callScript('utils-start-Conscience-dialogue');
  +callScript('utils-character-look-around', 'Conscience');
  +endConversation(100);
  +setConversation2('Ada', 'Conscience');
  Conscience: "This place is much more fancy than I thought!"
  Ada: "Fancy.  I suppose that is a good enough word for it."
  +setConversationSpeaker(none);
  +waitMS(1000);
  Ada: "So.  I am simply thinking out loud..."
  Ada: "How about we find a way to sneak up to the second floor and not deal with any of this VR nonsense?"
  +setConversationSpeaker(none);
  +waitMS(500);
  +playSound(aggro_alert);
  +setFacing('Conscience', 'right');
  +waitMS(50);
  +setFacing('Conscience', 'up');
  +waitMS(250);
  +callScript('utils-character-jump', 'Conscience');
  Conscience: "No, no, no!"
  Conscience: "We are DEFINITELY going to the VR.  I want to see it."
  Ada: "I did not come here to defeat monsters, Conscience.  I just want to find Carl-Arnold and then get out with as little problems as possible."
  Conscience: "PLEASE!"
  +setConversationSpeaker(none);
  +waitMS(1000);
  Conscience: "PLEASE!!!"
  +setConversationSpeaker(none);
  +waitMS(1000);
  Ada: "I--"
  +callScript('utils-character-shake-z', 'Conscience');
  Conscience: "PLEASE!!!!!!"
  Ada: "Fine!"
  Ada: "We can go see that Jason guy and get a Haptic Bracer or whatever."
  Ada: "But then NO MORE side-tracks.  We must go see what Carl-Arnold wants."
  +callScript('utils-character-jump', 'Conscience');
  Conscience: "Yay!"
  +callScript('utils-stop-Conscience-dialogue');
  +endConversation();
  +setStorage(quest_floor1-atrium_acquire-haptic-bracer);
@floor1-atrium-desk-employee2
  +lookAtEachOther('Ada','Atrium Desk Employee');
  +setConversation('Ada');
  Atrium Desk Employee: "Have a wonderful time here at the Regem Ludos Arcade!"
  +endConversation();

#floor1-atrium-elevator-employee
  action,?isnot(with('Haptic Bracer')):floor1-atrium-elevator-employee-no-bracer
  action,?all(with('Haptic Bracer'), once()):floor1-atrium-elevator-employee-with-bracer
  action,floor1-atrium-elevator-employee-default
@floor1-atrium-elevator-employee-default
  +lookAtEachOther('Ada', Atrium Elevator Employee);
  +setConversation('Ada');
  Atrium Elevator Employee: "Here for the elevator?  Go right ahead."
  +setConversationSpeaker(none);
  +callScript(floor1-enter-elevator);
  +endConversation();
@floor1-atrium-elevator-employee-no-bracer
  +lookAtEachOther('Ada', Atrium Elevator Employee);
  +setConversation('Ada');
  Atrium Elevator Employee: "Here to ride the elevator?  Can you show me your Haptic Bracer?"
  +?is('floor1-atrium-desk-employee'):{
    Ada: "I have not acquired a Haptic Bracer yet."
    Atrium Elevator Employee: "I'm afraid you'll have to get one of those before I can let you use the elevator."
    Atrium Elevator Employee: "Go talk to Instructor Jason by the VR Practice room, he'll be able to get you one."
  }
  +?isnot('floor1-atrium-desk-employee'):{
    Ada: "Haptic Bracer?  What is that?"
    Atrium Elevator Employee: "Ah, you're new here huh?"
    Atrium Elevator Employee: "Go speak to whoever is running the reception desk, they can get you oriented."
  }
  // this script might not get called from a talk trigger
  +resetAi('Atrium Elevator Employee');
  +endConversation();
@floor1-atrium-elevator-employee-with-bracer
  +lookAtEachOther('Ada', Atrium Elevator Employee);
  +setConversation('Ada');
  Atrium Elevator Employee: "Here to ride the elevator?  Can you show me your Haptic Bracer?"
  Atrium Elevator Employee: "Ah yes, I see you have one.  Go right ahead into the elevator; it'll take you to the next floor."
  +setConversationSpeaker(none);
  +callScript(floor1-atrium-enter-elevator);
  +callScript(floor1-atrium-sendElevatorUp);
  +fadeOut(1000);
  +endConversation();
  +changeRoom(floor2South, MarkerDoorElevatorDown);
  +fadeIn(1000);
@floor1-atrium-sendElevatorUp
  +applyZTransform('Ada', 64, 2000);
@floor1-atrium-open-elevator
  +changeTileAtMarker(MarkerDoorElevatorA, ELEVATOR_BCK_OPEN2);
  +changeTileAtMarker(MarkerDoorElevatorA, ELEVATOR_BCK_OPEN1, 16, 0);
@floor1-atrium-close-elevator
  +changeTileAtMarker(MarkerDoorElevatorA, ELEVATOR_BCK_CLOSED2);
  +changeTileAtMarker(MarkerDoorElevatorA, ELEVATOR_BCK_CLOSED1, 16, 0);
@floor1-atrium-enter-elevator
  +callScript(floor1-atrium-open-elevator);
  +walkToMarker('Ada', MarkerElevatorOutside);
  +walkToMarker('Ada', MarkerElevatorInside);
  +setFacing('Ada', leftdown);
  +waitMS(100);
  +callScript(floor1-atrium-close-elevator);
  +waitMS(500);

#floor1-atrium-employee-jason
  action,?is(quest_tutorial_active):floor1-atrium-employee-jason-tutorial-active
  // haven't spoken to front desk yet
  action,?isnot(quest_floor1-atrium_acquire-haptic-bracer):floor1-atrium-employee-jason-quest-not-started
  // don't have Haptic Bracer yet
  action,?all(isnot(quest_floor1-atrium_acquire-haptic-bracer-complete),once()):floor1-atrium-employee-jason-haptic-bracer
  action,?all(isnot(quest_floor1-atrium_acquire-haptic-bracer-complete)):floor1-atrium-employee-jason-haptic-bracer-ask
  action,floor1-atrium-employee-jason-default
@floor1-atrium-employee-jason-haptic-bracer
  +lookAtEachOther('Ada', 'Atrium Employee Jason');
  +setConversation('Ada');
  Atrium Employee Jason: "Hello! How may I help you today?"
  Ada: "Do you happen to be Jason?  I am looking to acquire something called a 'Haptic Bracer'."
  Atrium Employee Jason: "Ah yes.  I can help you with that."
  Atrium Employee Jason: "Let me grab you one."
  +setConversationSpeaker(none);
  +walkToMarker(Atrium Employee Jason, MarkerJasonB);
  +lookAtCharacter('Ada', 'Atrium Employee Jason');
  +waitMS(1000);
  +walkToMarker(Atrium Employee Jason, MarkerJasonA);
  +lookAtEachOther('Ada', 'Atrium Employee Jason');
  Atrium Employee Jason: "Here you are!"
  +acquireItem('HapticBracer');
  Atrium Employee Jason: "Would you like me to run you through how to use it?"
  +awaitChoice('Yes. (Enters Tutorial)', 'No.');
  +?eq(lastChoiceIndex, 0):{
    Ada: "Sure."
    +callScript('floor1-atrium-employee-jason-start-tutorial');
  }
  +?eq(lastChoiceIndex, 1):{
    Ada: "Not right now."
    Atrium Employee Jason: "No worries.  Come back when you're ready."
  }
  +endConversation();
@floor1-atrium-employee-jason-haptic-bracer-ask
  +lookAtEachOther('Ada', 'Atrium Employee Jason');
  +setConversation('Ada');
  Atrium Employee Jason: "Would you like me to run you through how to use your Haptic Bracer?"
  +awaitChoice('Yes. (Enters Tutorial)', 'No.');
  +?eq(lastChoiceIndex, 0):{
    Ada: "Sure"
    +callScript('floor1-atrium-employee-jason-start-tutorial');
  }
  +?eq(lastChoiceIndex, 1):{
    Ada: "Not right now."
    Atrium Employee Jason: "No worries.  Come back when you're ready."
  }
  +endConversation();
@floor1-atrium-employee-jason-start-tutorial
  +setStorage('quest_tutorial_active', true);
  Atrium Employee Jason: "Excellent!  Follow me please."
  +setConversationSpeaker('none');
  +walkToMarker(Atrium Employee Jason, MarkerDoorTut);
  +setFacing(Atrium Employee Jason, 'rightup');
  +setDoorStateAtMarker(MarkerDoorTutTile, RED_DOOR, BCK, OPEN);
  +waitMS(500);
  +despawnCharacter(Atrium Employee Jason);
  +waitMS(500);
  +walkToMarker(Ada, MarkerDoorTut);
  +callScript('utils-change-room', 'floor1TutEntrance', 'MarkerDoor');
  //pass control to the script in the next room
  +callScript('floor1-tut-entrance-begin-tut');
@floor1-atrium-employee-jason-quest-not-started
  +lookAtCharacter('Atrium Employee Jason', 'Ada');
  +setConversation('Ada');
  Atrium Employee Jason: "Hello!  How may I help you today?"
  Ada: "Hello.  What is that room behind you?"
  Atrium Employee Jason: "That's the VR training room!"
  Ada: "VR?"
  Atrium Employee Jason: "Oh you're new here?  Go speak with the person at the front desk.  She can get you set up."
  Atrium Employee Jason: "Then you can come back over here."
  +endConversation();
  // +setDoorStateAtMarker(MarkerDoorVRPractice, RED_DOOR, BCK, OPEN);
@floor1-atrium-employee-jason-tutorial-active
  +lookAtCharacter('Atrium Employee Jason', 'Ada');
  +setConversation('Ada');
  Atrium Employee Jason: "Are you enjoying the tutorial?"
  +endConversation();

#floor1-atrium-TicTacToeGirl
  // if you haven't beat the tic-tac-toe quest
  action,?isnot(quest_floor1-atrium_tic-tac-toe-complete):floor1-atrium-TicTacToeGirl-first
  // default
  action,this
@this
  +lookAtEachOther('Ada', 'Tic Tac Toe Girl');
  +setConversation('Ada');
  Tic Tac Toe Girl: "There probably are better games than Tic-Tac-Toe, but I kinda like its simplicity."
  +endConversation();
@floor1-atrium-TicTacToeGirl-first
  +lookAtEachOther('Ada', 'Tic Tac Toe Girl');
  +setConversation('Ada');
  Tic Tac Toe Girl: "The machines over here aren't very exciting.  You can only play Tic-Tac-Toe on them."
  Tic Tac Toe Girl: "Not that the game is stupid or anything, but it's just SO EASY to beat the AI."
  Tic Tac Toe Girl: "Honestly, I feel kinda bad for it.  I wonder if it feels sad to lose all the time."
  Tic Tac Toe Girl: "Maybe somebody should let it win a few games, you know, to help its self-esteem."
  +setFacing('Tic Tac Toe Girl', rightdown);
  +endConversation();
// Called from onGameComplete in the TicTacToe Arcade Cabinet Meta
@floor1-atrium-TicTacToeGirl-complete
  +lookAtEachOther('Ada', 'Tic Tac Toe Girl');
  +setConversation('Ada');
  Tic Tac Toe Girl: "You actually let it win, huh?  It seems pretty excited about that."
  Tic Tac Toe Girl: "Maybe a little too excited..."
  +setConversationSpeaker(none);
  +setFacing('Tic Tac Toe Girl', left);
  +waitMS(1000);
  +lookAtEachOther('Ada', 'Tic Tac Toe Girl');
  +waitMS(1000);
  Tic Tac Toe Girl: "..."
  Tic Tac Toe Girl: "Well, I'm glad I wasn't the one who lost to it."
  +setStorage(quest_floor1-atrium_tic-tac-toe-complete);
  +resetAi('Tic Tac Toe Girl');
  +endConversation();

#floor1-atrium-TicTacToeMachine
  action,this
  @this
  +setFacing(Ada, leftup);
  // If Ada hasn't spoken with the girl standing by the machines, force that cutscene
  +?isnot(floor1-atrium-TicTacToeGirl):{
    +lookAtCharacter('Tic Tac Toe Girl', 'Ada');
    +setConversation('Ada');
    Tic Tac Toe Girl: "Hey, you looking to play a game?"
    +callScript(floor1-atrium-TicTacToeGirl-first);
    +setStorage(floor1-atrium-TicTacToeGirl);
    +waitMS(1000);
    +setFacing(Ada, leftup);
    +waitMS(1000);
  }
  +fadeOut(100);
  +runArcadeCabinetGame(TIC_TAC_TOE);
  +fadeIn(50);
  +setAtMarker(Ada, MarkerMachine1);

#floor1-atrium-TicTacToeMachine2
  action,this
  @this
  +setFacing(Ada, leftup);
  // If Ada hasn't spoken with the girl standing by the machines, force that cutscene
  +?isnot(floor1-atrium-TicTacToeGirl):{
    +lookAtCharacter('Tic Tac Toe Girl', 'Ada');
    +setConversation('Ada');
    Tic Tac Toe Girl: "Hey, you looking to play a game?"
    +callScript(floor1-atrium-TicTacToeGirl-first);
    +setStorage(floor1-atrium-TicTacToeGirl);
    +waitMS(1000);
    +setFacing(Ada, leftup);
    +waitMS(1000);
  }
  +fadeOut(100);
  +runArcadeCabinetGame(TIC_TAC_TOE);
  +fadeIn(50);
  +setAtMarker(Ada, MarkerMachine2);