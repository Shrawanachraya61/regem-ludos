#floor1Atrium
@this

#floor2South
@this

#floor1-atrium-desk-employee
  action,?once():this
  action,floor1-atrium-desk-employee2
@this
  +lookAtEachOther('Ada','Atrium Desk Employee');
  +setConversation('Ada');
  Atrium Desk Employee: "Hello and welcome to the <color=ORANGE>Regem Ludos Arcade</>!"
  Atrium Desk Employee: "Have you been here before?"
  +setConversationSpeaker(none);
  +setAnimationAndWait('Ada', 'ada_shake_head_down');
  +lookAtEachOther('Ada','Atrium Desk Employee');
  +waitMS(500);
  Ada: "I have not."
  Atrium Desk Employee: "A newcomer? <delay=500 scale=1.25> Wonderful! <delay=500 cascade> Let's get you signed in."
  Atrium Desk Employee: "I'll need your <scale=1.25 color=BLUE>Full Name</scale>, you know, like how it would appear on a drivers license."
  Ada: "My full name...?"
  Ada: "It is <color=YELLOW cascade=100>Adalais Eldridge</>."
  Ada: "<cascade=100>However I <scale=1.25 cascade-letters=200>MUCH <cascade-letters=100>prefer <color=YELLOW>Ada</>."
  Atrium Desk Employee: "I'll have to put in the full name for you, honey; compliancy reasons and all that."
  +setConversationSpeaker(none);
  +setAnimationAndWait('Atrium Desk Employee', employee-girl_ovr_gesture_rightup);
  +playSound('blip');
  +waitMS(1000);
  Atrium Desk Employee: "Excellent, <delay=500 cascade> I've set up a profile for you."
  Atrium Desk Employee: "Please allow me to give you a rundown of our facility."
  Ada: "<cascade=75>Actually, I am only here... to see a <scale=0.75 cascade-letters=50>friend<cascade-letters=50> of mine."
  Atrium Desk Employee: "It'll be quick, I promise!"
  Ada: "<scale=0.75 cascade-letters=150>Fine."
  Atrium Desk Employee: "We have a wide variety of arcade games for you to enjoy.  However in order to play, each of these machines requires some number of <color=BLUE>Regem Ludos Tokens</>."
  Atrium Desk Employee: "You can acquire these from all sorts of places around the arcade, we encourage you to do some exploring!"
  Atrium Desk Employee: "But since you are new, I am happily able to provide you with a courtesy <color=YELLOW>starter pack of 10 Tokens</>."
  +setConversationSpeaker(none);
  +setAnimationAndWait('Atrium Desk Employee', employee-girl_ovr_gesture_rightup);
  +modifyTokens(10);
  Atrium Desk Employee: "Use those to play any one of our many arcade games!"
  Ada: "Thanks, I suppose."
  Ada: "I am not really here to play any games though.  I would like to get to the second floor of this building."
  Atrium Desk Employee: "The second floor?  Before you can access further floors you'll need to go through our extra-special VR <color=BLUE>tutorial</>."
  Ada: "<scale=1.25>Tutorial!"
  Ada: "<cascade=150>No no no<cascade>-- I just need to meet a friend of mine!"
  Atrium Desk Employee: "There's a good reason for the tutorial."
  Atrium Desk Employee: "The <color=ORANGE>Regem Ludos Arcade</> is a very large facility and features several particularly <scale=1.25>SPECIAL</> floors."
  Atrium Desk Employee: "These are the primary reason why people come to this arcade. These are the VR floors."
  Ada: "<cascade-letters=100>......."
  Ada: "<scale=1.25>VR</> Floors?"
  +setConversationSpeaker(none);
  +waitMS(500);
  +setAnimationAndWait('Atrium Desk Employee', employee-girl_ovr_nod_rightup);
  +waitMS(500);
  Atrium Desk Employee: "Yes! On these special floors we are able to create a truly astounding variety of different places and things - all in <color=BLUE>virtual space</>!"
  Atrium Desk Employee: "However, to get access you'll need a wearable called a <color=BLUE>Haptic Bracer</>."
  Ada: "Look I am sure these <color=BLUE>VR floors</> are quite interesting to the average customer."
  Ada: "However at the moment I am not particularly <italic>enthralled</> with them."
  Ada: "Can I not just go to the second floor and skip all this nonsense?"
  Atrium Desk Employee: "Unfortunately we can't let you do that."
  Atrium Desk Employee: "To get access to the upper floors, you'll need to acquire a <color=BLUE>Haptic Bracer</>.  It's the policy of the Arcade and all that."
  Atrium Desk Employee: "But don't worry, the <color=ORANGE>Regem Ludos Arcade</> provides all newcomers with one upon entry."
  Atrium Desk Employee: "Go and speak with <color=BLUE>Instructor Jason</> over in the area adjacent to this room.  He is standing outside of our VR Practice area."
  Atrium Desk Employee: "He can teach you some helpful tips on how to battle some of the monsters in VR."
  Ada: "Wait--<cascade=150> What did you say?"
  +setConversationSpeaker(none);
  +waitMS(500);
  +callScript('utils-character-shake-z', 'Ada');
  +waitMS(500);
  Ada: "<cascade-letters=150>Battle <cascade-letters=100 scale=1.25 color=RED>MONSTERS</>?"
  Ada: "<cascade scale=1.25>I just need to go to the second floor!"
  +setConversationSpeaker(none);
  +waitMS(500);
  +setAnimationAndWait('Atrium Desk Employee', employee-girl_ovr_nod_rightup);
  +waitMS(500);
  Atrium Desk Employee: "Yep!  Our VR features an exciting <color=BLUE>battle system</>!  You'll have to fight your way through the floors of this arcade to reach the top!"
  Atrium Desk Employee: "Alrighty! That's about it for the rundown.  If you have further questions, don't hesitate to ask!"
  Ada: "But <scale=0.75>what <scale=0.5>if I do not <scale=0.25> want to------?</>"
  Atrium Desk Employee: "Have a wonderful time here at the <color=ORANGE>Regem Ludos Arcade</>!"
  +setConversationSpeaker(none);
  +waitMS(1000);
  +setFacing(Ada, rightup);
  +waitMS(100);
  Ada: "Ugh..."
  +setConversationSpeaker(none);
  +setFacing('Atrium Desk Employee', rightup);
  +walkToMarker('Ada', MarkerDeskEmployeeWalk);
  +callScript('utils-start-Conscience-dialogue');
  +callScript('utils-character-look-around', 'Conscience');
  +endConversation(100);
  +setConversation2('Ada', 'Conscience');
  Conscience: "This place is much more fancy than I thought!"
  Ada: "<cascade=500>Fancy.  Yes.<cascade=33>  I suppose that is a good enough word for it."
  +setConversationSpeaker(none);
  +waitMS(1000);
  Ada: "<scale=1.25 cascade-letters=250>So.<delay=200 cascade=100> I am simply thinking out <cascade-letters=100>loud..."
  Ada: "How about we find a way to sneak up to the second floor and not deal with any of this VR nonsense?"
  +setConversationSpeaker(none);
  +waitMS(500);
  +setFacing('Conscience', 'right');
  +waitMS(50);
  +setFacing('Conscience', 'up');
  +waitMS(250);
  +callScript('utils-character-jump', 'Conscience');
  Conscience: "<cascade=100>No, no, no!"
  Conscience: "We are <shake>DEFINITELY</> going to the VR.  I want to see it!"
  Ada: "I did not come here to defeat <color=RED scale=1.25>MONSTERS</>.<delay=750 cascade=33> I just want to find Carl-Arnold and then get out with as little problems as possible."
  Conscience: "C'mon, it totally sounds fun!"
  +setConversationSpeaker(none);
  +waitMS(1000);
  Conscience: "<scale=2 cascade-letters=75>Please!!"
  +setConversationSpeaker(none);
  +waitMS(1000);
  Ada: "I don't think it's a good idea."
  +callScript('utils-character-shake-z', 'Conscience');
  Conscience: "<scale=2.5 cascade-letters=20 shake>PLEASE!!!!!!"
  +setConversationSpeaker(none);
  +waitMS(750);
  Ada: "Fine!"
  Ada: "We can go see that Jason guy and get a <color=BLUE>Haptic Bracer</> or whatever."
  Ada: "But then NO MORE side-tracks.  I have to go see what <color=YELLOW>Carl-Arnold</> wants."
  +setConversationSpeaker(none);
  +waitMS(500);
  +callScript('utils-character-jump', 'Conscience');
  Conscience: "Yay!"
  Conscience: "It'll be worth it, I promise!"
  +callScript('utils-stop-Conscience-dialogue');
  +endConversation();
  +setStorage(quest_floor1-atrium_acquire-haptic-bracer);
@floor1-atrium-desk-employee2
  +lookAtEachOther('Ada','Atrium Desk Employee');
  +setConversation('Ada');
  Atrium Desk Employee: "Have a wonderful time here at the <color=ORANGE>Regem Ludos Arcade</>!"
  +endConversation();

#floor1-atrium-elevator-employee
  action,?isnot(with('Haptic Bracer')):floor1-atrium-elevator-employee-no-bracer
  action,?all(with('Haptic Bracer'), once()):floor1-atrium-elevator-employee-with-bracer
  action,floor1-atrium-elevator-employee-default
@floor1-atrium-elevator-employee-default
  +lookAtEachOther('Ada', Atrium Elevator Employee);
  +setConversation('Ada');
  Atrium Elevator Employee: "Here for the elevator?  Go right ahead."
  +setConversationSpeaker(none);
  +callScript(floor1-enter-elevator);
  +endConversation();
@floor1-atrium-elevator-employee-no-bracer
  +lookAtEachOther('Ada', Atrium Elevator Employee);
  +setConversation('Ada');
  Atrium Elevator Employee: "Here to ride the elevator?  Can you show me your <color=BLUE>Haptic Bracer</>?"
  +?is('floor1-atrium-desk-employee'):{
    Ada: "I have not acquired a <color=BLUE>Haptic Bracer</> yet."
    Atrium Elevator Employee: "I'm afraid you'll have to get one of those before I can let you use the elevator."
    Atrium Elevator Employee: "Go talk to <color=BLUE>Instructor Jason</> by the VR Practice room, he'll be able to get you one."
  }
  +?isnot('floor1-atrium-desk-employee'):{
    Ada: "Haptic Bracer?  What is that?"
    Atrium Elevator Employee: "Ah, you're new here huh?"
    Atrium Elevator Employee: "Go speak to whoever is running the reception desk, they can get you oriented."
  }
  // this script might not get called from a talk trigger
  +resetAi('Atrium Elevator Employee');
  +endConversation();
@floor1-atrium-elevator-employee-with-bracer
  +lookAtEachOther('Ada', Atrium Elevator Employee);
  +setConversation('Ada');
  Atrium Elevator Employee: "Here to ride the elevator?  Can you show me your <color=BLUE>Haptic Bracer</>?"
  Atrium Elevator Employee: "Ah yes, I see you have one.  Go right ahead into the elevator; it'll take you to the next floor."
  +setConversationSpeaker(none);
  +callScript(floor1-atrium-enter-elevator);
  +callScript(floor1-atrium-sendElevatorUp);
  +fadeOut(1000);
  +endConversation();
  +changeRoom(floor2South, MarkerDoorElevatorDown);
  +fadeIn(1000);
@floor1-atrium-sendElevatorUp
  +applyZTransform('Ada', 64, 2000);
@floor1-atrium-open-elevator
  +changeTileAtMarker(MarkerDoorElevatorA, ELEVATOR_BCK_OPEN2);
  +changeTileAtMarker(MarkerDoorElevatorA, ELEVATOR_BCK_OPEN1, 16, 0);
@floor1-atrium-close-elevator
  +changeTileAtMarker(MarkerDoorElevatorA, ELEVATOR_BCK_CLOSED2);
  +changeTileAtMarker(MarkerDoorElevatorA, ELEVATOR_BCK_CLOSED1, 16, 0);
@floor1-atrium-enter-elevator
  +callScript(floor1-atrium-open-elevator);
  +walkToMarker('Ada', MarkerElevatorOutside);
  +walkToMarker('Ada', MarkerElevatorInside);
  +setFacing('Ada', leftdown);
  +waitMS(100);
  +callScript(floor1-atrium-close-elevator);
  +waitMS(500);

#floor1-atrium-employee-jason
  action,?is(quest_tutorial_active):floor1-atrium-employee-jason-tutorial-active
  // haven't spoken to front desk yet
  action,?isnot(quest_floor1-atrium_acquire-haptic-bracer):floor1-atrium-employee-jason-quest-not-started
  // don't have Haptic Bracer yet
  action,?all(isnot(quest_floor1-atrium_acquire-haptic-bracer-complete),once()):floor1-atrium-employee-jason-haptic-bracer
  action,?all(isnot(quest_floor1-atrium_acquire-haptic-bracer-complete)):floor1-atrium-employee-jason-haptic-bracer-ask
  action,floor1-atrium-employee-jason-default
@floor1-atrium-employee-jason-haptic-bracer
  +lookAtEachOther('Ada', 'Atrium Employee Jason');
  +setConversation('Ada');
  Atrium Employee Jason: "Hello! How may I help you today?"
  Ada: "Do you happen to be Jason?  I am looking to acquire something called a <color=BLUE>Haptic Bracer</>."
  Atrium Employee Jason: "Ah yes.  I can help you with that."
  Atrium Employee Jason: "Let me grab you one."
  +setConversationSpeaker(none);
  +walkToMarker(Atrium Employee Jason, MarkerJasonB);
  +lookAtCharacter('Ada', 'Atrium Employee Jason');
  +waitMS(1000);
  +walkToMarker(Atrium Employee Jason, MarkerJasonA);
  +lookAtEachOther('Ada', 'Atrium Employee Jason');
  Atrium Employee Jason: "Here you are!"
  +acquireItem('HapticBracer');
  Atrium Employee Jason: "Would you like me to run you through how to use it?"
  +awaitChoice('Yes. (Enters Tutorial)', 'No.');
  +?eq(lastChoiceIndex, 0):{
    Ada: "Sure."
    +callScript('floor1-atrium-employee-jason-start-tutorial');
  }
  +?eq(lastChoiceIndex, 1):{
    Ada: "Not right now."
    Atrium Employee Jason: "No worries.  Come back when you're ready."
  }
  +endConversation();
@floor1-atrium-employee-jason-haptic-bracer-ask
  +lookAtEachOther('Ada', 'Atrium Employee Jason');
  +setConversation('Ada');
  Atrium Employee Jason: "Would you like me to run you through how to use your Haptic Bracer?"
  +awaitChoice('Yes. (Enters Tutorial)', 'No.');
  +?eq(lastChoiceIndex, 0):{
    Ada: "Sure"
    +callScript('floor1-atrium-employee-jason-start-tutorial');
  }
  +?eq(lastChoiceIndex, 1):{
    Ada: "Not right now."
    Atrium Employee Jason: "No worries.  Come back when you're ready."
  }
  +endConversation();
@floor1-atrium-employee-jason-start-tutorial
  +setStorage('quest_tutorial_active', true);
  Atrium Employee Jason: "Excellent!  Follow me please."
  +setConversationSpeaker('none');
  +walkToMarker(Atrium Employee Jason, MarkerDoorTut);
  +setFacing(Atrium Employee Jason, 'rightup');
  +setDoorStateAtMarker(MarkerDoorTutTile, RED_DOOR, BCK, OPEN);
  +waitMS(500);
  +despawnCharacter(Atrium Employee Jason);
  +waitMS(500);
  +walkToMarker(Ada, MarkerDoorTut);
  +callScript('utils-change-room', 'floor1TutEntrance', 'MarkerDoor');
  //pass control to the script in the next room
  +callScript('floor1-tut-entrance-begin-tut');
@floor1-atrium-employee-jason-quest-not-started
  +lookAtCharacter('Atrium Employee Jason', 'Ada');
  +setConversation('Ada');
  Atrium Employee Jason: "Hello!  How may I help you today?"
  Ada: "Hello.  What is that room behind you?"
  Atrium Employee Jason: "That's the VR training room!"
  Ada: "VR?"
  Atrium Employee Jason: "Oh you're new here?  Go speak with the person at the front desk.  She can get you set up."
  Atrium Employee Jason: "Then you can come back over here."
  +endConversation();
  // +setDoorStateAtMarker(MarkerDoorVRPractice, RED_DOOR, BCK, OPEN);
@floor1-atrium-employee-jason-tutorial-active
  +lookAtCharacter('Atrium Employee Jason', 'Ada');
  +setConversation('Ada');
  Atrium Employee Jason: "Are you enjoying the tutorial?"
  +endConversation();

#floor1-atrium-TicTacToeGirl
  // if you haven't beat the tic-tac-toe quest
  action,?all(isnot(quest_floor1-atrium_tic-tac-toe-complete),once()):floor1-atrium-TicTacToeGirl-first
  action,?isnot(quest_floor1-atrium_tic-tac-toe-complete):floor1-atrium-TicTacToeGirl-rest
  // default
  action,this
@this
  +lookAtEachOther('Ada', 'Tic Tac Toe Girl');
  +setConversation('Ada');
  Tic Tac Toe Girl: "There probably are better games than <color=BLUE>Tic-Tac-Toe</>, but I kinda like its simplicity."
  +endConversation();
@floor1-atrium-TicTacToeGirl-first
  +lookAtEachOther('Ada', 'Tic Tac Toe Girl');
  +setConversation('Ada');
  Tic Tac Toe Girl: "<cascade>The machines over here aren't very exciting.  You can only play <color=BLUE>Tic-Tac-Toe</> on them."
  Tic Tac Toe Girl: "<cascade=50>Not that the game is stupid or anything, <delay=500 cascade=50> but it's just... <delay=750 scale=1.25 color=LIGHTBLUE>SO EASY<delay=500 cascade-letters> to beat the AI."
  Tic Tac Toe Girl: "Honestly, I feel kinda bad for it.  I wonder if it feels sad to lose all the time."
  Tic Tac Toe Girl: "Maybe somebody should let it win a few games, you know, to help its self-esteem."
  +setFacing('Tic Tac Toe Girl', rightdown);
  +endConversation();
@floor1-atrium-TicTacToeGirl-rest
  +lookAtEachOther('Ada', 'Tic Tac Toe Girl');
  +setConversation('Ada');
  Tic Tac Toe Girl: "<cascade>Maybe somebody should let the AI win a few games of <color=BLUE cascade>Tic-Tac-Toe<cascade>. You know, to help the its self-esteem."
  +setFacing('Tic Tac Toe Girl', rightdown);
  +endConversation();
// Called from onGameComplete in the TicTacToe Arcade Cabinet Meta
@floor1-atrium-TicTacToeGirl-complete
  +changeTileAtMarker(MarkerTTTMachineTile, TIC_TAC_TOE_EXCITED);
  +lookAtEachOther('Ada', 'Tic Tac Toe Girl');
  +setConversation('Ada');
  Tic Tac Toe Girl: "You actually let it win, huh?  It seems pretty excited about that."
  Tic Tac Toe Girl: "Maybe a little too excited..."
  +setConversationSpeaker(none);
  +setFacing('Tic Tac Toe Girl', left);
  +waitMS(1000);
  +lookAtEachOther('Ada', 'Tic Tac Toe Girl');
  +waitMS(1000);
  Tic Tac Toe Girl: "..."
  Tic Tac Toe Girl: "Well, <delay=750 cascade=50> I'm glad I wasn't the one who lost to it."
  +setStorage(quest_floor1-atrium_tic-tac-toe-complete);
  +resetAi('Tic Tac Toe Girl');
  +changeTileAtMarker(MarkerTTTMachineTile, TIC_TAC_TOE_NORMAL);
  +endConversation();

#floor1-atrium-TicTacToeMachine
step-first,this
action,floor1-atrium-TicTacToeMachine-action
@this
+setCharacterText('Press Action (X) to play Tic-Tac-Toe.');
@floor1-atrium-TicTacToeMachine-action
+walkToMarker(Ada, MarkerTTTMachine);
+setFacing(Ada, leftup);
// If Ada hasn't spoken with the girl standing by the machines, force that cutscene
+?isnot(floor1-atrium-TicTacToeGirl):{
  +setCharacterText('');
  +lookAtCharacter('Tic Tac Toe Girl', 'Ada');
  +setConversation('Ada');
  Tic Tac Toe Girl: "Hey."
  +lookAtEachOther('Tic Tac Toe Girl', 'Ada');
  +panCameraToFitCharacters(500, false, Ada, Tic Tac Toe Girl);
  Tic Tac Toe Girl: "You looking to play that game?"
  +callScript(floor1-atrium-TicTacToeGirl-first);
  +panCameraBackToPlayer(500);
  +setStorage(floor1-atrium-TicTacToeGirl);
  +waitMS(1000);
  +setFacing(Ada, leftup);
}
+fadeOut(100);
+runArcadeCabinetGame(TIC_TAC_TOE);
+fadeIn(50);
+setAtMarker(Ada, MarkerTTTMachine);

#floor1-Floor1PingPongGuyA
  action,?once():this
  action,floor1-Floor1PingPongGuyA2
@this
  +setAiState(Floor1PingPongGuyA, pingpong_interrupted, true);
  +setAiState(Floor1PingPongGuyB, pingpong_interrupted, true);
  +lookAtEachOther(Ada, Floor1PingPongGuyB);
  +lookAtEachOther(Ada, Floor1PingPongGuyA);
  +setConversation(Ada);
  +panCameraToFitCharacters(500, false, Ada, Floor1PingPongGuyA, Floor1PingPongGuyB);
  Floor1PingPongGuyA: "Hey there!"
  Floor1PingPongGuyA: "You wanna play some ping pong or something?"
  +lookAtEachOther(Floor1PingPongGuyB, Floor1PingPongGuyA);
  Floor1PingPongGuyB: "Dude!  We're in the middle of a set here! You can't just let some girl play."
  Floor1PingPongGuyA: "Honestly, I might need a break here soon.  This is tiring me out."
  +jump(Floor1PingPongGuyB);
  Floor1PingPongGuyB: "<shake>NO BREAKS!"
  Floor1PingPongGuyB: "<cascade> We <color=BLUE cascade> must <cascade> find out who the better player is!"
  Floor1PingPongGuyB: "<cascade> You agreed to this <color=BLUE>best of 99<cascade>, and by golly you're gonna finish it!"
  Floor1PingPongGuyA: "Alright, whatever.  It's your serve."
  +panCameraBackToPlayer(500);
  +endConversation();
  +setAiState(Floor1PingPongGuyA, pingpong_interrupted, false);
  +setAiState(Floor1PingPongGuyB, pingpong_interrupted, false);
  +setAiState(Floor1PingPongGuyB, pingpong_reset, true);
@floor1-Floor1PingPongGuyA2
  +setConversation(Ada);
  +lookAtCharacter(Ada, Floor1PingPongGuyA);
  Ada: "They seem quite enthralled with their ping pong match."
  +endConversation();
  +setAiState(Floor1PingPongGuyB, pingpong_reset, true);

#floor1-atrium-greeter-employee
  step-first,?once():floor1-atrium-greeter-employee-step
  action,?once():this
  action,floor1-atrium-greeter-employee2
@this
  +lookAtEachOther(Ada, AtriumGreeterEmployee);
  +setConversation(Ada);
  AtriumGreeterEmployee: "What can I do for you?"
  Ada: "I am looking for a <italic>friend</> of mine."
  Ada: "He told me he is on the second floor."
  Ada: "Do you know where I need to go to get up there?"
  AtriumGreeterEmployee: "Please direct all directions-related questions to my cohort at the front desk."
  AtriumGreeterEmployee: "She will happily assist if you are lost."
  +endConversation();
@floor1-atrium-greeter-employee2
+lookAtEachOther(Ada, AtriumGreeterEmployee);
  +setConversation(Ada);
  AtriumGreeterEmployee: "On behalf of the arcade staff, we hope you have a wonderful time!"
  +endConversation();
@floor1-atrium-greeter-employee-step
  +setConversation(Ada);
  AtriumGreeterEmployee: "Hello there!"
  +panCameraToFitCharacters(500, false, Ada, AtriumGreeterEmployee);
  AtriumGreeterEmployee: "<cascade>Welcome to the <color=ORANGE>Regem Ludos Arcade</>!"
  +setConversationSpeaker(none);
  +walkToMarker(Ada, MarkerFloor1AtriumGreeterEmployeeWalk);
  +panCameraToFitCharacters(500, false, Ada, AtriumGreeterEmployee);
  AtriumGreeterEmployee: "Oh! <delay=200 cascade>You're from that prep school <color=BLUE>Erran Valley<cascade> a few blocks from here right?"
  Ada: "Yes, I am.  Why do you ask?"
  AtriumGreeterEmployee: "It's nothing!  Well, nothing that important."
  AtriumGreeterEmployee: "It's just that there's a boy from your school that owns the records for pretty much every arcade machine in this facility."
  AtriumGreeterEmployee: "I believe his name was Carl something-or-another.  Maybe it was <color=ORANGE>Carnold</>?"
  +setConversation(Conscience);
  Conscience: "(Carl-Arnold has the record for every arcade machine?  Whoah.)"
  Ada: "<cascade-letters>......"
  +setConversation(Ada);
  AtriumGreeterEmployee: "I gotta tell you though, you kids from that school are a cut above the rest."
  AtriumGreeterEmployee: "There's obviously a reason why it's the most well-regarded prep school in the state."
  AtriumGreeterEmployee: "You're all so smart; so clever."
  AtriumGreeterEmployee: "It's always exciting when one of you walks in here."
  Ada: "Are there many students from <color=BLUE>Erran Valley</> who come here?"
  AtriumGreeterEmployee: "From time to time, yeah."
  AtriumGreeterEmployee: "I saw a few of you come in earlier actually."
  AtriumGreeterEmployee: "I love that flower in your hair by the way.  It really brings out your eyes."
  Ada: "<cascade>Um.  <cascade-letters>Thanks."
  AtriumGreeterEmployee: "Anyway, if you need any assistance, don't hesitate to speak with any of the employees!"
  AtriumGreeterEmployee: "You can recognize us by our hats and white attire."
  AtriumGreeterEmployee: "On behalf of the arcade staff, we hope you have a wonderful time!"
  +setConversationSpeaker(none);
  +panCameraBackToPlayer(500);
  +endConversation(500, true);